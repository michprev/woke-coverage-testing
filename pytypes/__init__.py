
import woke.testing.core

woke.testing.core.errors = {b'\x08\xc3y\xa0': {'': ('woke.testing.internal', ('Error',))}, b'NH{q': {'': ('woke.testing.internal', ('Panic',))}, b'!tJY': {'@axelar-network/axelar-gmp-sdk-solidity/contracts/ConstAddressDeployer.sol:ConstAddressDeployer': ('pytypes.axelarnetwork.axelargmpsdksolidity.contracts.ConstAddressDeployer', ('ConstAddressDeployer', 'EmptyBytecode'))}, b'A\x02\xe8:': {'@axelar-network/axelar-gmp-sdk-solidity/contracts/ConstAddressDeployer.sol:ConstAddressDeployer': ('pytypes.axelarnetwork.axelargmpsdksolidity.contracts.ConstAddressDeployer', ('ConstAddressDeployer', 'FailedDeploy'))}, b'Ow##': {'@axelar-network/axelar-gmp-sdk-solidity/contracts/ConstAddressDeployer.sol:ConstAddressDeployer': ('pytypes.axelarnetwork.axelargmpsdksolidity.contracts.ConstAddressDeployer', ('ConstAddressDeployer', 'FailedInit'))}, b'm\x18{(': {'@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IERC20.sol:IERC20': ('pytypes.axelarnetwork.axelargmpsdksolidity.contracts.interfaces.IERC20', ('IERC20', 'InvalidAccount')), '@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IERC20MintableBurnable.sol:IERC20MintableBurnable': ('pytypes.axelarnetwork.axelargmpsdksolidity.contracts.interfaces.IERC20', ('IERC20', 'InvalidAccount')), '@axelar-network/axelar-gmp-sdk-solidity/contracts/test/ERC20.sol:ERC20': ('pytypes.axelarnetwork.axelargmpsdksolidity.contracts.interfaces.IERC20', ('IERC20', 'InvalidAccount')), '@axelar-network/axelar-gmp-sdk-solidity/contracts/test/ERC20MintableBurnable.sol:ERC20MintableBurnable': ('pytypes.axelarnetwork.axelargmpsdksolidity.contracts.interfaces.IERC20', ('IERC20', 'InvalidAccount'))}}
woke.testing.core.events = {b"'\xb8\xe3\x13*\xfa\x95%Gp\xe1\xc1\xd2\x14\xea\xfd\xe5+\xc4}\x1bn\x1f]\xfc\xbb8\x0c<\xa3\xf52": {'@axelar-network/axelar-gmp-sdk-solidity/contracts/ConstAddressDeployer.sol:ConstAddressDeployer': ('pytypes.axelarnetwork.axelargmpsdksolidity.contracts.ConstAddressDeployer', ('ConstAddressDeployer', 'Deployed'))}, b'\x8c[\xe1\xe5\xeb\xec}[\xd1OqB}\x1e\x84\xf3\xdd\x03\x14\xc0\xf7\xb2)\x1e[ \n\xc8\xc7\xc3\xb9%': {'@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IERC20.sol:IERC20': ('pytypes.axelarnetwork.axelargmpsdksolidity.contracts.interfaces.IERC20', ('IERC20', 'Approval')), '@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IERC20MintableBurnable.sol:IERC20MintableBurnable': ('pytypes.axelarnetwork.axelargmpsdksolidity.contracts.interfaces.IERC20MintableBurnable', ('IERC20MintableBurnable', 'Approval')), '@axelar-network/axelar-gmp-sdk-solidity/contracts/test/ERC20.sol:ERC20': ('pytypes.axelarnetwork.axelargmpsdksolidity.contracts.test.ERC20', ('ERC20', 'Approval')), '@axelar-network/axelar-gmp-sdk-solidity/contracts/test/ERC20MintableBurnable.sol:ERC20MintableBurnable': ('pytypes.axelarnetwork.axelargmpsdksolidity.contracts.test.ERC20MintableBurnable', ('ERC20MintableBurnable', 'Approval')), '@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20': ('pytypes.openzeppelin.contracts.token.ERC20.IERC20', ('IERC20', 'Approval'))}, b'\xdd\xf2R\xad\x1b\xe2\xc8\x9bi\xc2\xb0h\xfc7\x8d\xaa\x95+\xa7\xf1c\xc4\xa1\x16(\xf5ZM\xf5#\xb3\xef': {'@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IERC20.sol:IERC20': ('pytypes.axelarnetwork.axelargmpsdksolidity.contracts.interfaces.IERC20', ('IERC20', 'Transfer')), '@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IERC20MintableBurnable.sol:IERC20MintableBurnable': ('pytypes.axelarnetwork.axelargmpsdksolidity.contracts.interfaces.IERC20MintableBurnable', ('IERC20MintableBurnable', 'Transfer')), '@axelar-network/axelar-gmp-sdk-solidity/contracts/test/ERC20.sol:ERC20': ('pytypes.axelarnetwork.axelargmpsdksolidity.contracts.test.ERC20', ('ERC20', 'Transfer')), '@axelar-network/axelar-gmp-sdk-solidity/contracts/test/ERC20MintableBurnable.sol:ERC20MintableBurnable': ('pytypes.axelarnetwork.axelargmpsdksolidity.contracts.test.ERC20MintableBurnable', ('ERC20MintableBurnable', 'Transfer')), '@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20': ('pytypes.openzeppelin.contracts.token.ERC20.IERC20', ('IERC20', 'Transfer'))}, b'\x7f&\xb8?\xf9n\x1f+jh/\x138R\xf6y\x8a\t\xc4e\xda\x95\x92\x14`\xce\xfb8G@$\x98': {'@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable': ('pytypes.openzeppelin.contracts.proxy.utils.Initializable', ('Initializable', 'Initialized')), 'contracts/FeeCollector.sol:FeeCollector': ('pytypes.contracts.FeeCollector', ('FeeCollector', 'Initialized'))}}
woke.testing.core.contracts_by_metadata = {b'\xa2dipfsX"\x12 J\xac\xc1\n/:\xb7\x98\xe5Y\xa6\xeb\xec\x1f34%\xa3\x08W\xce|\xd6\x0c\xef<\x0b5aJ\x94OdsolcC\x00\x08\t\x003': '@axelar-network/axelar-gmp-sdk-solidity/contracts/ConstAddressDeployer.sol:ConstAddressDeployer', b'\xa2dipfsX"\x12 \xef\xe6\xffp\x99\x02\x8e\x00\xff\x8a\x8cr7R\xa6\xfd\xadao?N\xcdeDP\xdav\xf9\x8b\x85J\xc6dsolcC\x00\x08\t\x003': '@axelar-network/axelar-gmp-sdk-solidity/contracts/test/ERC20.sol:ERC20', b'\xa2dipfsX"\x12 ]9\xa1T\xcd\x86_\x7f\xc5\x03\x82\x1f\x13Z\xb3 \xec\xb4\xb43+bC\xda\xcc\xfb\xe8L}X4~dsolcC\x00\x08\t\x003': '@axelar-network/axelar-gmp-sdk-solidity/contracts/test/ERC20MintableBurnable.sol:ERC20MintableBurnable', b'\xa2dipfsX"\x12 \x14V\xf7v\x7fF\xf29\xda\x11\xf8\x13hW;H\x0fm\x8d\xe2\xe2\xa3!\xda\xdf[\xcde\xd1\xc3\x9dudsolcC\x00\x08\x11\x003': '@openzeppelin/contracts/utils/Address.sol:Address', b'\xa2dipfsX"\x12 \xa8)\xa2\xec_\x1a\x96\x0b\xf8\xcd\xd4<\xa9W\xf2*\xa1\xb3X\x82\xc52zY\xda\xd7\xa0`\x1db\x99XdsolcC\x00\x08\x11\x003': 'contracts/FeeCollector.sol:FeeCollector'}
woke.testing.core.contracts_inheritance = {'@axelar-network/axelar-gmp-sdk-solidity/contracts/ConstAddressDeployer.sol:ConstAddressDeployer': ('@axelar-network/axelar-gmp-sdk-solidity/contracts/ConstAddressDeployer.sol:ConstAddressDeployer',), '@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IERC20.sol:IERC20': ('@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IERC20.sol:IERC20',), '@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IERC20MintableBurnable.sol:IERC20MintableBurnable': ('@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IERC20MintableBurnable.sol:IERC20MintableBurnable', '@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IERC20.sol:IERC20'), '@axelar-network/axelar-gmp-sdk-solidity/contracts/test/ERC20.sol:ERC20': ('@axelar-network/axelar-gmp-sdk-solidity/contracts/test/ERC20.sol:ERC20', '@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IERC20.sol:IERC20'), '@axelar-network/axelar-gmp-sdk-solidity/contracts/test/ERC20MintableBurnable.sol:ERC20MintableBurnable': ('@axelar-network/axelar-gmp-sdk-solidity/contracts/test/ERC20MintableBurnable.sol:ERC20MintableBurnable', '@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IERC20MintableBurnable.sol:IERC20MintableBurnable', '@axelar-network/axelar-gmp-sdk-solidity/contracts/test/ERC20.sol:ERC20', '@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IERC20.sol:IERC20'), '@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable': ('@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable',), '@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20': ('@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20',), '@openzeppelin/contracts/utils/Address.sol:Address': ('@openzeppelin/contracts/utils/Address.sol:Address',), 'contracts/FeeCollector.sol:FeeCollector': ('contracts/FeeCollector.sol:FeeCollector', '@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable')}
woke.testing.core.contracts_revert_index = {'@axelar-network/axelar-gmp-sdk-solidity/contracts/ConstAddressDeployer.sol:ConstAddressDeployer': {689, 619, 804}, '@axelar-network/axelar-gmp-sdk-solidity/contracts/test/ERC20.sol:ERC20': {2144, 1751}, '@axelar-network/axelar-gmp-sdk-solidity/contracts/test/ERC20MintableBurnable.sol:ERC20MintableBurnable': {2802, 2019, 2412, 3133}}
woke.testing.core.deployment_code_index = [(((2350, b'\x8ew\xf8\x83\xc9\x18\x1dW\x8d\xea\x02\x80\x8e\xfa\x9f A\x96Z\x92\xe6\xb1\x88\r\xf0D~\xce\x02R\x9b\x08'),), '@axelar-network/axelar-gmp-sdk-solidity/contracts/ConstAddressDeployer.sol:ConstAddressDeployer'), (((4582, b'\x07\xa1mmv&\xea@\x18\x80t\xa9>\x9d\x1ee\xb2\x19\xbed{\x81\xeb\xa3\x10\xd3\xc6\xde\x88\xf1\r\x11'),), '@axelar-network/axelar-gmp-sdk-solidity/contracts/test/ERC20.sol:ERC20'), (((5518, b"\xb2\xff'H\xb3D:\x8f\x8e\xd2\xde%?\x8f\x16\xfd\xe3A\xdb\x1cy\x83\xbd\xc8\xbbt`J\xd4\xcax]"),), '@axelar-network/axelar-gmp-sdk-solidity/contracts/test/ERC20MintableBurnable.sol:ERC20MintableBurnable'), (((166, b"\xcf6\x08A\xcc\xa5r)\xce\xdb\xa2\x1e'\x93\xb3\x93v6#\xd4!\xdd\x05!R?\x0c\xe9O\xbd\xec\x14"),), '@openzeppelin/contracts/utils/Address.sol:Address'), (((1198, b'\x99s\xf4\xc6\x81,@\x927\xa2v\xfd\xd3\xf6\xaf_\x07\x827;\xfaA\xfc\x97(\xa7\x1c\xe4&\xd4\x1d\xc2'),), 'contracts/FeeCollector.sol:FeeCollector')]
